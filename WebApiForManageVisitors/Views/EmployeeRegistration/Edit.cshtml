@model WebApiForManageVisitors.Models.DepartmentEmployeeRegistrationModel

@{
    ViewBag.Title = "Edit";
}
<style>
    .MakeWide {
        width: 422px;
        height: 30px;
    }
</style>
<style>
    .ForError {
        /*font-weight: bold;*/
        color: red;
    }
</style>

<script>
        function getDesignation() {
            debugger;
            var stateId = $("#DepartmentDropDown").val();

            $.ajax({
                url: '@Url.Action("GetDesignationByID", "EmployeeRegistration")',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({ id: +stateId }),
                success: function (result) {
                    $("#DesignationDropDown").empty();
                    //$("#DesignationDropDown").html("");
                    $("#DesignationDropDown").append
                    ($('<option></option>').val(null).html("---Select Designation---"));
                    $.each($.parseJSON(result), function (i, Designation) {
                        $("#DesignationDropDown ").append($('<option></option>').val(Designation.DesignationID).html(Designation.DesignationName))

                    })

                },
                error: function () { alert("Whooaaa! Something went wrong..") },
            });
        }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="content-header clearfix">
        <h1 class="pull-left">
            Edit Employee Registration
            <small><i class="fa fa-arrow-circle-left"></i>@Html.ActionLink("  Back to List", "Index")</small>
        </h1>
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                SUBMIT
            </button>
        </div>
    </div>
    <div class="content-header clearfix">
        <div class="box box-info">
            <div class="box-body">
                <div class="form-horizontal">

                 

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployeeTokenNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.EmployeeTokenNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmployeeTokenNo, "", new { @class = "ForError" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "ForError" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployeeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.EmployeeAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmployeeAddress, "", new { @class = "ForError" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployeeContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.EmployeeContactNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmployeeContactNo, "", new { @class = "ForError" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployeeEmailID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.EmployeeEmailID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmployeeEmailID, "", new { @class = "ForError" })
                        </div>
                    </div>
              
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployeeDepartmentID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.EmployeeDepartmentID, (ViewBag.DepartmentCombo1) as SelectList, "--Select Department--", new { id = "DepartmentDropDown", onchange = "getDesignation()", @class = "MakeWide" })
                            @Html.ValidationMessageFor(model => model.EmployeeDepartmentID, "", new { @class = "ForError" })
                           </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DesignationCombo1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @*@Html.DropDownListFor(model => model.EmployeeDesignationID, (ViewBag.DesignationCombo) as SelectList, "--Select Designation--", new { id = "DesignationDropDown", @class = "MakeWide" })*@
                            @Html.DropDownListFor(model => model.DesignationCombo1, (ViewBag.DesignationCombo) as SelectList, "--Select Designation--", new { id = "DesignationDropDown", @class = "MakeWide" })
                            @Html.ValidationMessageFor(model => model.DesignationCombo1, "", new { @class = "ForError" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployeePassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.EmployeePassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmployeePassword, "", new { @class = "ForError" })
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
  
}
